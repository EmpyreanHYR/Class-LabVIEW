unit LTDMC;

interface

//板卡配置
function dmc_board_init():WORD;stdcall; //初始化控制卡
function dmc_board_reset(CardNo:WORD):Smallint;stdcall; 
function dmc_soft_reset(CardNo:WORD):Smallint;stdcall; 
function dmc_board_close():Smallint;stdcall; //关闭控制卡
function dmc_get_card_ID(CardNo:WORD;CardID:longint):Smallint;stdcall;   //读取控制卡卡号
function dmc_get_card_version(CardNo:WORD;CardVersion:LongWORD):Smallint;stdcall; //读取控制卡硬件版本
function dmc_get_card_soft_version(CardNo:WORD;FirmID:WORD;SubFirmID:LongWORD):Smallint;stdcall; //读取控制卡硬件的固件版本
function dmc_get_card_lib_version(LibVer:LongWORD):Smallint;stdcall;   //读取控制卡动态库版本
function dmc_get_total_axes(CardNo:WORD;TotalAxis:longint):Smallint;stdcall; //读取指定卡轴数
function dmc_set_softlimit(CardNo:WORD;axis:WORD;enable:WORD;source_sel:WORD;SL_action:WORD;N_limit:longint;P_limit:longint):Smallint;stdcall; //设置软限位参数
function dmc_get_softlimit(CardNo:WORD;axis:WORD;enable:WORD;source_sel:WORD;SL_action:WORD;N_limit:longint;P_limit:longint):Smallint;stdcall; //读取软限位参数
//速度设置
function dmc_set_profile(CardNo:WORD;axis:WORD;Min_Vel:double;Max_Vel:double;Tacc:double;Tdec:double;stop_vel:double):Smallint;stdcall; //设定速度曲线参数
function dmc_get_profile(CardNo:WORD;axis:WORD;Min_Vel:double;Max_Vel:double;Tacc:double;Tdec:double;stop_vel:double):Smallint;stdcall; //读取速度曲线参数
function dmc_set_s_profile(CardNo:WORD;axis:WORD;s_mode:WORD;s_para:double):Smallint;stdcall; //设置平滑速度曲线参数
function dmc_get_s_profile(CardNo:WORD;axis:WORD;s_mode:WORD;s_para:double):Smallint;stdcall; //读取平滑速度曲线参数
function dmc_set_vector_profile_MultiCoor(CardNo:WORD;crd:WORD;Max_Vel:double;Taccdec:double):Smallint;stdcall; 
function dmc_get_vector_profile_MultiCoor(CardNo:WORD;crd:WORD;Max_Vel:double;Taccdec:double):Smallint;stdcall; 
//运动模块脉冲模式
function dmc_set_pulse_outmode(CardNo:WORD;axis:WORD;outmode:WORD):Smallint;stdcall; //设定脉冲输出模式
function dmc_get_pulse_outmode(CardNo:WORD;axis:WORD;outmode:WORD):Smallint;stdcall; //读取脉冲输出模式
//点位运动
function dmc_pmove(CardNo:WORD;axis:WORD;dist:longint;posi_mode:WORD):Smallint;stdcall; //指定轴做定长位移运动
function dmc_reset_target_position(CardNo:WORD;axis:WORD;dist:longint;posi_mode:WORD):Smallint;stdcall; //运动中改变目标位置
function dmc_change_speed(CardNo:WORD;axis:WORD;Curr_Vel:double;Taccdec:double):Smallint;stdcall; //在线改变指定轴的当前运动速度
//JOG运动
function dmc_vmove(CardNo:WORD;axis:WORD;dir:WORD):Smallint;stdcall; //指定轴做连续运动
//直线插补
function dmc_line_MultiCoor(CardNo:WORD;crd:WORD;axis:WORDNum;axisList:WORD;DistList:longint;posi_mode:WORD):Smallint;stdcall; 	//指定轴直线插补运动
//回零运动
function dmc_set_homemode(CardNo:WORD;axis:WORD;home_dir:WORD;vel_mode:double;mode:WORD;EZ_count:WORD):Smallint;stdcall; //设定指定轴的回原点模式
function dmc_get_homemode(CardNo:WORD;axis:WORD;home_dir:WORD;vel_mode:double;home_mode:WORD;EZ_count:WORD):Smallint;stdcall; //读取指定轴的回原点模式
function dmc_home_move(CardNo:WORD;axis:WORD):Smallint;stdcall;
//手轮运动		
function dmc_set_handwheel_inmode(CardNo:WORD;axis:WORD;inmode:WORD;multi:double;vh:double):Smallint;stdcall; 	//设置输入手轮脉冲信号的工作方式
function dmc_get_handwheel_inmode(CardNo:WORD;axis:WORD;inmode:WORD;multi:double;vh:double):Smallint;stdcall; 	//读取输入手轮脉冲信号的工作方式
function dmc_handwheel_move(CardNo:WORD;axis:WORD):Smallint;stdcall; 	//启动指定轴的手轮脉冲运动
//编码器
function dmc_set_counter_inmode(CardNo:WORD;axis:WORD;mode:WORD):Smallint;stdcall;  //设定编码器的计数方式
function dmc_get_counter_inmode(CardNo:WORD;axis:WORD;mode:WORD):Smallint;stdcall; //读取编码器的计数方式
function dmc_get_encoder(CardNo:WORD;axis:WORD):longint;stdcall;
function dmc_set_encoder(CardNo:WORD;axis:WORD;encoder_value:longint):Smallint;stdcall;
function dmc_get_counter_flag(CardNo:WORD):Smallint;stdcall;    //读取计数器标志
function dmc_reset_counter_flag(CardNo:WORD):Smallint;stdcall; //复位计数器的计数标志
function dmc_reset_clear_flag(CardNo:WORD):Smallint;stdcall;   //复位计数器的清零标志
//锁存
function dmc_set_latch_mode(CardNo:WORD;axis:WORD;all_enable:WORD;latch_source:WORD):Smallint;stdcall;  	//设置锁存方式
function dmc_get_latch_mode(CardNo:WORD;axis:WORD;all_enable:WORD;latch_source:WORD):Smallint;stdcall; 
function dmc_get_latch_value(CardNo:WORD;axis:WORD):longint;stdcall;  	//读取编码器锁存器的值
function dmc_get_latch_flag(CardNo:WORD;axis:WORD):LongWORD;stdcall;  	//读取锁存器标志
function dmc_reset_latch_flag(CardNo:WORD;axis:WORD):Smallint;stdcall;  	//复位锁存器标志
//位置比较		
function dmc_compare_set_config(CardNo:WORD;axis:WORD;enable:WORD;cmp_source:WORD):Smallint;stdcall;  	//配置比较器
function dmc_compare_get_config(CardNo:WORD;axis:WORD;enable:WORD;cmp_source:WORD):Smallint;stdcall; 	//读取配置比较器
function dmc_compare_clear_points(CardNo:WORD;axis:WORD):Smallint;stdcall;  	//清除所有比较点
function dmc_compare_add_point(CardNo:WORD;axis:WORD;pos:longint;dir:WORD;action:WORD;actpara:LongWORD):Smallint;stdcall;  	//添加比较点
function dmc_compare_get_current_point(CardNo:WORD;axis:WORD;pos:longint):Smallint;stdcall;  	//读取当前比较点
function dmc_compare_get_points_runned(CardNo:WORD;axis:WORD;pointNum:longint):Smallint;stdcall;  	//查询已经比较过的点
function dmc_compare_get_points_remained(CardNo:WORD;axis:WORD;pointNum:longint):Smallint;stdcall;  	//查询可以加入的比较点数量
//二维位置比较
function dmc_compare_set_config_ex(CardNo:WORD;enable:WORD;cmp_source:WORD):Smallint;stdcall;  	//配置比较器
function dmc_compare_get_config_ex(CardNo:WORD;enable:WORD;cmp_source:WORD):Smallint;stdcall; 	//读取配置比较器
function dmc_compare_add_point_ex(CardNo:WORD;axis:WORD;pos:longint;dir:WORD;action:WORD;actpara:LongWORD):Smallint;stdcall;  	//添加两轴位置比较点
function dmc_compare_get_state_ex(CardNo:WORD):Smallint;stdcall; 
//高速位置比较
function dmc_set_cmp_config(CardNo:WORD;axis:WORD;cmp_pos:longint;cmp_source:WORD;cmp_logic:WORD):Smallint;stdcall; 
function dmc_get_cmp_config(CardNo:WORD;axis:WORD;cmp_pos:longint;cmp_source:WORD;cmp_logic:WORD):Smallint;stdcall; 
function dmc_set_cmp_enable(CardNo:WORD;axis:WORD;cmp_enable:WORD):Smallint;stdcall; 
function dmc_get_cmp_enable(CardNo:WORD;axis:WORD;cmp_enable:WORD):Smallint;stdcall; 
function dmc_read_cmp_pin(CardNo:WORD;axis:WORD):Smallint;stdcall; 
function dmc_write_cmp_pin(CardNo:WORD;axis:WORD;on_off:WORD):Smallint;stdcall; 
//通用IO
function dmc_read_inbit(CardNo:WORD;bitno:WORD):Smallint;stdcall; //读取输入口的状态
function dmc_write_outbit(CardNo:WORD;bitno:WORD;ON_OFF:WORD):Smallint;stdcall;  //设置输出口的状态
function dmc_read_outbit(CardNo:WORD;bitno:WORD):Smallint;stdcall;    //读取输出口的状态
function dmc_read_inport(CardNo:WORD;portno:WORD):LongWORD;stdcall; //读取输入端口的值
function dmc_read_outport(CardNo:WORD;portno:WORD):LongWORD;stdcall;   //读取输出端口的值
function dmc_write_outport(CardNo:WORD;IoMask:LongWORD;outport_val:LongWORD):Smallint;stdcall; //设置输出端口的值
//专用IO
function dmc_set_inp_mode(CardNo:WORD;axis:WORD;enable:WORD;inp_logic:WORD):Smallint;stdcall; //设置INP信号
function dmc_get_inp_mode(CardNo:WORD;axis:WORD;enable:WORD;inp_logic:WORD):Smallint;stdcall; //读取设置INP信号
function dmc_set_erc_mode(CardNo:WORD;axis:WORD;enable:WORD;erc_logic:WORD;erc_width:WORD;erc_off_time:WORD):Smallint;stdcall; //设置ERC信号
function dmc_get_erc_mode(CardNo:WORD;axis:WORD;enable:WORD;erc_logic:WORD;erc_width:WORD;erc_off_time:WORD):Smallint;stdcall; //读取设置ERC信号
function dmc_set_alm_mode(CardNo:WORD;axis:WORD;enable:WORD;alm_logic:WORD;alm_action:WORD):Smallint;stdcall; //设置ALM信号
function dmc_get_alm_mode(CardNo:WORD;axis:WORD;enable:WORD;alm_logic:WORD;alm_action:WORD):Smallint;stdcall; //读取设置ALM信号
function dmc_set_ez_mode(CardNo:WORD;axis:WORD;ez_logic:WORD;ez_mode:WORD;filter:double):Smallint;stdcall; //设置EZ信号
function dmc_get_ez_mode(CardNo:WORD;axis:WORD;ez_logic:WORD;ez_mode:WORD;filter:double):Smallint;stdcall; //读取设置EZ信号
function dmc_set_sd_mode(CardNo:WORD;axis:WORD;enable:WORD;sd_logic:WORD;sd_mode:WORD):Smallint;stdcall; //设置SD信号
function dmc_get_sd_mode(CardNo:WORD;axis:WORD;enable:WORD;sd_logic:WORD;sd_mode:WORD):Smallint;stdcall; //读取设置SD信号
function dmc_set_el_mode(CardNo:WORD;axis:WORD;el_logic:WORD;el_mode:WORD):Smallint;stdcall; //设置EL信号
function dmc_get_el_mode(CardNo:WORD;axis:WORD;el_logic:WORD;el_mode:WORD):Smallint;stdcall; //读取设置EL信号
function dmc_set_home_pin_logic(CardNo:WORD;axis:WORD;org_logic:WORD;filter:double):Smallint;stdcall;  //设置HOME信号
function dmc_get_home_pin_logic(CardNo:WORD;axis:WORD;org_logic:WORD;filter:double):Smallint;stdcall; //读取设置HOME信号
function dmc_write_sevon_pin(CardNo:WORD;axis:WORD;ON_OFF:WORD):Smallint;stdcall;   //输出SEVON信号
function dmc_read_sevon_pin(CardNo:WORD;axis:WORD):WORD;stdcall;   //读取SEVON信号
function dmc_read_rdy_pin(CardNo:WORD;axis:WORD):Smallint;stdcall;   //读取RDY状态
function dmc_write_erc_pin(CardNo:WORD;axis:WORD;sel:WORD):Smallint;stdcall; //控制ERC信号输出
function dmc_set_emg_mode(CardNo:WORD;enable:WORD;emg_logic:WORD):Smallint;stdcall;  //设置EMG信号
function dmc_get_emg_mode(CardNo:WORD;enbale:WORD;emg_logic:WORD):Smallint;stdcall; //读取设置EMG信号
//运动状态
function dmc_read_current_speed(CardNo:WORD;axis:WORD):Double;stdcall; //读取指定轴的当前速度
function dmc_read_vector_speed(CardNo:WORD):Double;stdcall; //读取当前卡的插补速度
function dmc_get_position(CardNo:WORD;axis:WORD):longint;stdcall;  //读取指定轴的当前位置
function dmc_set_position(CardNo:WORD;axis:WORD;current_position:longint):Smallint;stdcall; //设定指定轴的当前位置
function dmc_check_done(CardNo:WORD;axis:WORD):Smallint;stdcall; //读取指定轴的运动状态
function dmc_check_done_MultiCoor(CardNo:WORD;crd:WORD):Smallint;stdcall; 
function dmc_axis_io_status(CardNo:WORD;axis:WORD):Smallint;stdcall; //读取指定轴有关运动信号的状态
function dmc_stop(CardNo:WORD;axis:WORD;stop_mode:WORD):Smallint;stdcall; //单轴停止
function dmc_stop_MultiCoor(CardNo:WORD;crd:WORD;stop_mode:WORD):Smallint;stdcall; 
function dmc_emg_stop(CardNo:WORD):Smallint;stdcall; //紧急停止所有轴

implementation
//板卡配置
function dmc_board_init;external'LTDMC.dll';
function dmc_board_reset;external'LTDMC.dll';
function dmc_soft_reset;external'LTDMC.dll';
function dmc_board_close;external'LTDMC.dll';
function dmc_get_card_ID;external'LTDMC.dll';
function dmc_get_card_version;external'LTDMC.dll';
function dmc_get_card_soft_version;external'LTDMC.dll';
function dmc_get_card_lib_version;external'LTDMC.dll';
function dmc_get_total_axes;external'LTDMC.dll';
function dmc_set_softlimit;external'LTDMC.dll';
function dmc_get_softlimit;external'LTDMC.dll';
//速度设置
function dmc_set_profile;external'LTDMC.dll';
function dmc_get_profile;external'LTDMC.dll';
function dmc_set_s_profile;external'LTDMC.dll';
function dmc_get_s_profile;external'LTDMC.dll';
function dmc_set_vector_profile_MultiCoor;external'LTDMC.dll';
function dmc_get_vector_profile_MultiCoor;external'LTDMC.dll';
//运动模块脉冲模式
function dmc_set_pulse_outmode;external'LTDMC.dll';
function dmc_get_pulse_outmode;external'LTDMC.dll';
//点位运动
function dmc_pmove;external'LTDMC.dll';
function dmc_reset_target_position;external'LTDMC.dll';
function dmc_change_speed;external'LTDMC.dll';
//JOG运动
function dmc_vmove;external'LTDMC.dll';
//直线插补
function dmc_line_MultiCoor;external'LTDMC.dll';
//回零运动
function dmc_set_homemode;external'LTDMC.dll';
function dmc_get_homemode;external'LTDMC.dll';
function dmc_home_move;external'LTDMC.dll';
//手轮运动
function dmc_set_handwheel_inmode;external'LTDMC.dll';
function dmc_get_handwheel_inmode;external'LTDMC.dll';
function dmc_handwheel_move;external'LTDMC.dll';
//编码器
function dmc_set_counter_inmode;external'LTDMC.dll';
function dmc_get_counter_inmode;external'LTDMC.dll';
function dmc_get_encoder;external'LTDMC.dll';
function dmc_set_encoder;external'LTDMC.dll';
function dmc_get_counter_flag  ;external'LTDMC.dll';
function dmc_reset_counter_flag;external'LTDMC.dll';
function dmc_reset_clear_flag;external'LTDMC.dll';
//锁存
function dmc_set_latch_mode;external'LTDMC.dll';
function dmc_get_latch_mode;external'LTDMC.dll';
function dmc_get_latch_value;external'LTDMC.dll';
function dmc_get_latch_flag;external'LTDMC.dll';
function dmc_reset_latch_flag;external'LTDMC.dll';
//位置比较
function dmc_compare_set_config;external'LTDMC.dll';
function dmc_compare_get_config;external'LTDMC.dll';
function dmc_compare_clear_points;external'LTDMC.dll';
function dmc_compare_add_point;external'LTDMC.dll';
function dmc_compare_get_current_point;external'LTDMC.dll';
function dmc_compare_get_points_runned;external'LTDMC.dll';
function dmc_compare_get_points_remained;external'LTDMC.dll';
//二维位置比较
function dmc_compare_set_config_ex;external'LTDMC.dll';
function dmc_compare_get_config_ex;external'LTDMC.dll';
function dmc_compare_add_point_ex;external'LTDMC.dll';
function dmc_compare_get_state_ex;external'LTDMC.dll';
//高速位置比较
function dmc_set_cmp_config;external'LTDMC.dll';
function dmc_get_cmp_config;external'LTDMC.dll';
function dmc_set_cmp_enable;external'LTDMC.dll';
function dmc_get_cmp_enable;external'LTDMC.dll';
//通用IO
function dmc_read_inbit;external'LTDMC.dll';
function dmc_write_outbit;external'LTDMC.dll';
function dmc_read_outbit;external'LTDMC.dll';
function dmc_read_inport ;external'LTDMC.dll';
function dmc_read_outport;external'LTDMC.dll';
function dmc_write_outport;external'LTDMC.dll';
//专用IO
function dmc_set_inp_mode;external'LTDMC.dll';
function dmc_get_inp_mode;external'LTDMC.dll';
function dmc_set_erc_mode;external'LTDMC.dll';
function dmc_get_erc_mode;external'LTDMC.dll';
function dmc_set_alm_mode;external'LTDMC.dll';
function dmc_get_alm_mode;external'LTDMC.dll';
function dmc_set_ez_mode;external'LTDMC.dll';
function dmc_get_ez_mode;external'LTDMC.dll';
function dmc_set_sd_mode;external'LTDMC.dll';
function dmc_get_sd_mode;external'LTDMC.dll';
function dmc_set_el_mode;external'LTDMC.dll';
function dmc_get_el_mode;external'LTDMC.dll';
function dmc_set_home_pin_logic ;external'LTDMC.dll';
function dmc_get_home_pin_logic ;external'LTDMC.dll';
function dmc_write_sevon_pin;external'LTDMC.dll';
function dmc_read_sevon_pin;external'LTDMC.dll';
function dmc_read_rdy_pin;external'LTDMC.dll';
function dmc_write_erc_pin;external'LTDMC.dll';
function dmc_set_emg_mode;external'LTDMC.dll';
function dmc_get_emg_mode;external'LTDMC.dll';
function dmc_read_cmp_pin;external'LTDMC.dll';
function dmc_write_cmp_pin;external'LTDMC.dll';
//运动状态
function dmc_read_current_speed;external'LTDMC.dll';
function dmc_read_vector_speed;external'LTDMC.dll';
function dmc_get_position;external'LTDMC.dll';
function dmc_set_position;external'LTDMC.dll';
function dmc_check_done;external'LTDMC.dll';
function dmc_check_done_MultiCoor;external'LTDMC.dll';
function dmc_axis_io_status;external'LTDMC.dll';
function dmc_stop;external'LTDMC.dll';
function dmc_stop_MultiCoor;external'LTDMC.dll';
function dmc_emg_stop;external'LTDMC.dll';

end.
